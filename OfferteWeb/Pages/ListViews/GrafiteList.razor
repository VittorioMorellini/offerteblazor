@page "/grafite"

@using OfferteWeb.Models
@using OfferteWeb.Services
@using OfferteWeb.Components
@using OfferteWeb.Pages

@inject IGrafiteService grafiteService
@inject NavigationManager navigationManager;
@inherits BaseListPage<Grafite>;
<Loading IsLoading=@IsLoading></Loading>

<div class="pt-2">
    <PageTitle>Grafite</PageTitle>
    <ListPageHeader EntityName=Grafite NewItemClicked="NewItem" SearchAllClicked="(() => SearchAll())"></ListPageHeader>
    <MudTextField InputType="InputType.Search" @bind-Value="searchString" Placeholder="Cerca..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" DebounceInterval="500" OnDebounceIntervalElapsed="(() => SearchByString(searchString))"></MudTextField>
    <MudTable class="mt-4" Virtualize="true" Dense Items="@Items" ReadOnly>
        <HeaderContent>
            <MudTh>Descrizione</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>
                <MudText>@context.Descrizione</MudText>
            </MudTd>
            <MudTd>
                <MudButton StartIcon="@Icons.Material.Outlined.Edit" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" Class="m-1" OnClick="@((e) => EditItem(context.Id))">Modifica</MudButton>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{15, 50, 100}" />
        </PagerContent>
        <NoRecordsContent>
            Nessun elemento presente
        </NoRecordsContent>
    </MudTable>
</div>

@code {
    private string searchString = String.Empty;

    public string Grafite = "Grafite";

    protected override async Task OnInitializedAsync()
    {
        searchService = grafiteService;
        SearchByString(searchString);
        //Tags = await tagService.SearchTags();
    }


}