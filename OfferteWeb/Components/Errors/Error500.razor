@inject IWebHostEnvironment Env
@inject NavigationManager _NavigationManager
@inject IJSRuntime JSRuntime;

@if (true || Env.IsDevelopment())
{
    <MudCard Class="border-b-8 border-solid mud-border-error">
        <MudCardContent>
            <MudGrid Spacing="1">
                <MudItem xs="12" Class="d-flex justify-center pa-0">
                    <div id="error">
                        <div class="error">
                            <div class="error-500">
                                <h1><span>5</span><span>0</span><span>0</span></h1>
                            </div>
                        </div>
                    </div>
                </MudItem>
                <MudItem xs="12" Class="d-flex justify-center pa-0">
                    <MudIcon Icon="@Icons.Material.Filled.Cancel" Color="Color.Error" Size="Size.Large" Class="align-self-center" />
                    <MudText Typo="Typo.h4">Si è verificato un problema imprevisto</MudText>
                </MudItem>
                <MudItem xs="12" Class="d-flex justify-center pa-0">
                    <MudText Typo="Typo.body2"> 
                        <pre style="inline-size: 90vw; overflow-wrap: break-word;" class="exception-detail">@Exception?.ToString()</pre>
                    </MudText>
                </MudItem>
                <MudItem xs="12" Class="d-flex justify-center pa-0">
                    <MudButton StartIcon="@Icons.Material.Filled.ArrowBack" aria-label="delete" OnClick="@BackToHomePage">Indietro</MudButton>
                    <MudButton StartIcon="@Icons.Material.Filled.CopyAll" aria-label="delete" OnClick="@CopiaErrore">Copia errore</MudButton>
                </MudItem>
            </MudGrid>
        </MudCardContent>
    </MudCard>
}
else
{
    <MudCard Class="border-b-8 border-solid mud-border-error">
        <MudCardContent>
            <MudGrid Spacing="1">
                <MudItem xs="12" Class="d-flex justify-center pa-0">
                    <div id="error">
                        <div class="error">
                            <div class="error-500">
                                <h1><span>5</span><span>0</span><span>5</span></h1>
                            </div>
                        </div>
                    </div>
                </MudItem>
                <MudItem xs="12" Class="d-flex justify-center pa-0">
                    <MudIcon Icon="@Icons.Material.Filled.Cancel" Color="Color.Error" Size="Size.Large" Class="align-self-center" />
                    <MudText Typo="Typo.h4" Class="mx-4">Si è verificato un problema imprevisto</MudText>
                </MudItem>
                <MudItem xs="12" Class="d-flex justify-center pa-0">
                    <MudButton StartIcon="@Icons.Material.Filled.ArrowBack" aria-label="delete" OnClick="@BackToHomePage">Indietro</MudButton>
                </MudItem>
            </MudGrid>
        </MudCardContent>
    </MudCard>
}

@code {
    [Parameter]
    public Exception? Exception { get; set; }
    [Parameter]
    public EventCallback RecoverRequest { get; set; }

    private void BackToHomePage()
    {
        RecoverRequest.InvokeAsync();
        _NavigationManager.NavigateTo(@"\", forceLoad: true);
    }

    private async Task CopiaErrore()
    {
        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", Exception.Message);
        await JSRuntime.InvokeVoidAsync("window.alert", "Errore copiato");
    }
}